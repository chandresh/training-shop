Basic Shopping Cart
	- Admin can login
	- Admin can create categories
	- Admin can create products
	- Admin can view orders
	- Admin can mark orders as shipped

	- Visitors/Buyers can view products
	- Visitors/Buyers can search products
	- Visitors/Buyers can add products to their cart
	- Visitors/Buyers can checkout and submit an order
extra:
	- Visitors/Buyers can login/signup
	- Members can view their old orders
	- Members can view the status of their orders

1. Learn how to create an e-commerce website.
2. Do most stuff without scaffolding.
3. Search
4. Diff databases
5. Some part as TDD/BDD using Rspec & Cucumber

-------------------------------------------------

Using postgresql:
Step 1: Add gem 'pg'
2: Change database.yml
3. rake db:create:all

--------------------------------------------------

https://github.com/chandresh/training-shop

1. rails new shop -d postgresql -T --skip-bundle

2. git init; git add .; git commit -m "initial"

3. create a github repo and run:
git remote add origin git@github.com:chandresh/training-shop.git

4. git push -u origin master

5. Template
	- add images, css, js etc.
	- Copy the index page html to our layouts/application.html.erb

6. delete public/index.html

7. create a controller & action for homepage.

8. rename css to scss and covert all image references to something like:

background-image: url("templatemo_body.jpg");

9. Find the content area / main area and put: <%= yield %>

10. Put the code we like to see in our homepage, like we have a fake instance variable.
And then we make the code work!

11. Add model & change migration to add precision & scale:

rails g model Product name description:text price:decimal model_no

t.decimal :price, :precision => 8, :scale => 2

12. Added a truncate for description:
<%= truncate(product.description.to_s, length: 10) %>

13. We created a class method:

def self.home_page_products
    order.sample(9) # random 9 items
  end

14. Link the details page

15. Related products

16. Basic inventory on show page

17. Added paperclip for product image.

18. Admin namespace	
